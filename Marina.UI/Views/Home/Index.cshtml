@using X.PagedList.Mvc.Core;
@using X.PagedList;
@using System.Data
@model PagedList<DataRow>

@if (Model.Count != 0)
{
    <div class="table-wrapper">

        <table>
            <thead>
                <tr>
                    <th>#</th>
                    @foreach (var column in Model[0].Table.Columns.Cast<DataColumn>().Skip(3))
                    {
                        <th>@column.ColumnName</th>
                    }
                </tr>
            </thead>
            <tbody>
                @{
                    int rowNumber = 1;
                    foreach (DataRow row in Model)
                    {
                        <tr>
                            <td>@rowNumber</td>
                            @foreach (DataColumn column in row.Table.Columns.Cast<DataColumn>().Skip(3))
                            {
                                <td>@row[column.ColumnName]</td>
                            }
                        </tr>
                        rowNumber++;
                    }
                }

            </tbody>
        </table>
    </div>

    <br />

    <div class="pagination">

        @Html.PagedListPager((IPagedList)Model,page=>Url.Action("Index",new {page=page}),
    new X.PagedList.Mvc.Common.PagedListRenderOptions{
    DisplayItemSliceAndTotal = true,
    ContainerDivClasses = new[] {"navigation"},
    LiElementClasses = new[] {"page-item"},
    PageClasses = new[] {"page-link"},
    })

    </div>

    <br />
    <br />
    <br />
}


<script>

    $(document).ready(function ()){
        $('ul.pagination > li.disabled > a').addClass('page-link');
    });

</script>



@*
<div class="pager">
    @if (Model.PageCount > 1)
    {
        <ul>
            @if (Model.HasPreviousPage)
            {
                <li><a href="@Url.Action("Index", new { page = Model.PageNumber - 1 })  ">Previous</a></li>
            }
            @for (int i = 1; i <= Model.PageCount; i++)
            {
                <li><a href="@Url.Action("Index", new { page = i })" class="@((i == Model.PageNumber) ? "active" : "")">@i</a></li>
            }
            @if (Model.HasNextPage)
            {
                <li><a href="@Url.Action("Index", new { page = Model.PageNumber + 1 })">Next</a></li>
            }
        </ul>
    }
</div>
*@